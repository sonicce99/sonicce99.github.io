{"version":3,"file":"component---src-templates-blog-post-js-0cbb2790a62d949f3290.js","mappings":"iNAWA,MATYA,IAA0B,IAAzB,gBAAEC,GAAiBD,EAC9B,OACEE,EAAAA,cAAA,SACEC,UAAU,eACVC,wBAAyB,CAAEC,OAAQJ,IACnC,ECyEN,MAtEyBD,IAAwB,IAAAM,EAAA,IAAvB,KAAEC,EAAI,SAAEC,GAAUR,ECPrC,IAAwBS,IDQd,IEXYC,MAC3B,MAAMC,EAAWC,SAASC,uBAAuB,gBAEjD,IAAKF,GAAYA,EAASG,QAAU,EAClC,OAGF,IAAIC,EAAgB,KACpB,MAAMC,EAAeC,MAAMC,KAAKP,GAEhC,IAAK,IAAIQ,KAAOH,EACd,GAAIG,EAAIC,wBAAwBC,KAAO,GAAI,CACzCN,EAAgBI,EAAIG,aAAa,QACjC,KACF,CAWF,GARKP,IACHA,EAAgBC,EAAaA,EAAaF,OAAS,GAAGQ,aAAa,SAGrEV,SAASW,iBAAiB,oBAAoBC,SAAQC,IACpDA,EAAGC,UAAUC,OAAO,WAAW,IAG7BZ,EAAe,CACjB,MAAMa,EAAehB,SAASiB,cAAc,iBACzBd,EAAa,MAEhCa,GAAgBA,EAAaF,UAAUI,IAAI,WAC7C,GFlBSpB,ICRTqB,EAAAA,EAAAA,YAAU,KACRC,OAAOC,iBAAiB,SAAUxB,GAC3B,KACLuB,OAAOE,oBAAoB,SAAUzB,EAAS,IAE/C,IDMH,MAAM0B,EAAO5B,EAAK6B,eACZC,GAAkC,QAAtB/B,EAAAC,EAAK+B,KAAKC,oBAAY,IAAAjC,OAAA,EAAtBA,EAAwBkC,QAAK,SACzC,SAAEC,EAAQ,KAAEC,GAASnC,EACrBoC,EAAWR,EAAKS,YAAYD,SAElC,OACEzC,EAAAA,cAAC2C,EAAAA,EAAM,CAACrC,SAAUA,EAAUgC,MAAOH,GACjCnC,EAAAA,cAAC4C,EAAAA,EAAG,CACFN,MAAOL,EAAKS,YAAYJ,MACxBO,YAAaZ,EAAKS,YAAYG,aAAeZ,EAAKa,QAClDL,SAAUA,IAEZzC,EAAAA,cAAA,WACEC,UAAU,YACV8C,WAAS,EACTC,SAAS,6BAEThD,EAAAA,cAAA,cACEA,EAAAA,cAAA,MAAIiD,SAAS,YAAYhB,EAAKS,YAAYJ,OAC1CtC,EAAAA,cAAA,SAAIiC,EAAKS,YAAYQ,OAGvBlD,EAAAA,cAAA,WACEC,UAAU,eACVC,wBAAyB,CAAEC,OAAQ8B,EAAKkB,MACxCF,SAAS,gBAEXjD,EAAAA,cAACoD,EAAG,CAACrD,gBAAiBkC,EAAKlC,kBAE3BC,EAAAA,cAAA,WACAA,EAAAA,cAAA,cACEA,EAAAA,cAACqD,EAAAA,EAAG,QAIRrD,EAAAA,cAAA,OAAKC,UAAU,iBACbD,EAAAA,cAAA,MACEsD,MAAO,CACLC,QAAS,OACTC,SAAU,OACVC,eAAgB,gBAChBC,UAAW,OACXC,QAAS,IAGX3D,EAAAA,cAAA,UACGuC,GACCvC,EAAAA,cAAC4D,EAAAA,KAAI,CAACC,GAAItB,EAASuB,OAAOC,KAAMC,IAAI,QAAO,KACtCzB,EAASG,YAAYJ,QAI9BtC,EAAAA,cAAA,UACGwC,GACCxC,EAAAA,cAAC4D,EAAAA,KAAI,CAACC,GAAIrB,EAAKsB,OAAOC,KAAMC,IAAI,QAC7BxB,EAAKE,YAAYJ,MAAM,SAM3B,C","sources":["webpack://dongsu-blog/./src/components/toc.jsx","webpack://dongsu-blog/./src/templates/blog-post.js","webpack://dongsu-blog/./src/hooks/useScrollEvent.js","webpack://dongsu-blog/./src/js/scroll.js"],"sourcesContent":["import React from \"react\"\n\nconst Toc = ({ tableOfContents }) => {\n  return (\n    <aside\n      className=\"tocContainer\"\n      dangerouslySetInnerHTML={{ __html: tableOfContents }}\n    />\n  )\n}\n\nexport default Toc\n","import * as React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Bio from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\nimport Toc from \"../components/toc\"\nimport { scrollHandler } from \"../js/scroll\"\nimport { useScrollEvent } from \"../hooks/useScrollEvent\"\n\nconst BlogPostTemplate = ({ data, location }) => {\n  useScrollEvent(() => {\n    return scrollHandler()\n  })\n\n  const post = data.markdownRemark\n  const siteTitle = data.site.siteMetadata?.title || `Title`\n  const { previous, next } = data\n  const keywords = post.frontmatter.keywords\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <Seo\n        title={post.frontmatter.title}\n        description={post.frontmatter.description || post.excerpt}\n        keywords={keywords}\n      />\n      <article\n        className=\"blog-post\"\n        itemScope\n        itemType=\"http://schema.org/Article\"\n      >\n        <header>\n          <h1 itemProp=\"headline\">{post.frontmatter.title}</h1>\n          <p>{post.frontmatter.date}</p>\n        </header>\n\n        <section\n          className=\"blog-section\"\n          dangerouslySetInnerHTML={{ __html: post.html }}\n          itemProp=\"articleBody\"\n        />\n        <Toc tableOfContents={post.tableOfContents} />\n\n        <hr />\n        <footer>\n          <Bio />\n        </footer>\n      </article>\n\n      <nav className=\"blog-post-nav\">\n        <ul\n          style={{\n            display: `flex`,\n            flexWrap: `wrap`,\n            justifyContent: `space-between`,\n            listStyle: `none`,\n            padding: 0,\n          }}\n        >\n          <li>\n            {previous && (\n              <Link to={previous.fields.slug} rel=\"prev\">\n                ← {previous.frontmatter.title}\n              </Link>\n            )}\n          </li>\n          <li>\n            {next && (\n              <Link to={next.fields.slug} rel=\"next\">\n                {next.frontmatter.title} →\n              </Link>\n            )}\n          </li>\n        </ul>\n      </nav>\n    </Layout>\n  )\n}\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug(\n    $id: String!\n    $previousPostId: String\n    $nextPostId: String\n  ) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    markdownRemark(id: { eq: $id }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      tableOfContents\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        description\n        keywords\n      }\n    }\n    previous: markdownRemark(id: { eq: $previousPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n    next: markdownRemark(id: { eq: $nextPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n  }\n`\n","// useScrollEvent\nimport { useEffect } from \"react\"\n\nexport function useScrollEvent(onScroll) {\n  useEffect(() => {\n    window.addEventListener(`scroll`, onScroll)\n    return () => {\n      window.removeEventListener(`scroll`, onScroll)\n    }\n  }, [])\n}\n","export const scrollHandler = () => {\n  const titleTag = document.getElementsByClassName(\"custom-class\")\n\n  if (!titleTag || titleTag.length <= 0) {\n    return\n  }\n\n  let selected_aTag = null\n  const titleTag_arr = Array.from(titleTag)\n\n  for (let tag of titleTag_arr) {\n    if (tag.getBoundingClientRect().top > -30) {\n      selected_aTag = tag.getAttribute(\"href\")\n      break\n    }\n  }\n\n  if (!selected_aTag) {\n    selected_aTag = titleTag_arr[titleTag_arr.length - 1].getAttribute(\"href\")\n  }\n\n  document.querySelectorAll(\"aside a.selected\").forEach(el => {\n    el.classList.remove(\"selected\")\n  })\n\n  if (selected_aTag) {\n    const toc_selected = document.querySelector(\n      `aside a[href=\"${selected_aTag}\"]`\n    )\n    toc_selected && toc_selected.classList.add(\"selected\")\n  }\n}\n"],"names":["_ref","tableOfContents","React","className","dangerouslySetInnerHTML","__html","_data$site$siteMetada","data","location","onScroll","scrollHandler","titleTag","document","getElementsByClassName","length","selected_aTag","titleTag_arr","Array","from","tag","getBoundingClientRect","top","getAttribute","querySelectorAll","forEach","el","classList","remove","toc_selected","querySelector","add","useEffect","window","addEventListener","removeEventListener","post","markdownRemark","siteTitle","site","siteMetadata","title","previous","next","keywords","frontmatter","Layout","Seo","description","excerpt","itemScope","itemType","itemProp","date","html","Toc","Bio","style","display","flexWrap","justifyContent","listStyle","padding","Link","to","fields","slug","rel"],"sourceRoot":""}