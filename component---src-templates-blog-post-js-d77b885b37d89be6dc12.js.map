{"version":3,"file":"component---src-templates-blog-post-js-d77b885b37d89be6dc12.js","mappings":"iLAAA,EAAe,IAA0B,qDCiFzC,EArEY,WAAO,IAAD,IACVA,GAAOC,EAAAA,EAAAA,gBAAe,aAiBtBC,EAAM,UAAGF,EAAKG,KAAKC,oBAAb,aAAG,EAAwBF,OAC3B,UAAGF,EAAKG,KAAKC,oBAAb,OAAG,EAAwBC,OAEvC,OACE,uBACEC,UAAU,MACVC,MAAO,CACLC,QAAS,OACTC,eAAgB,SAChBC,WAAY,WAGd,gBAAC,EAAAC,EAAD,CACEL,UAAU,aACVM,QAAS,CAAC,OAAQ,OAAQ,QAC1BC,IAAI,4BACJC,MAAO,GACPC,OAAQ,GACRC,IAAI,kBANN,uBAQCd,MAAAA,OAAA,EAAAA,EAAQe,OACP,2BACE,+CACA,kEAGA,0DACA,qBAAGV,MAAO,CAAEW,aAAc,QAA1B,2CAGA,uBAAKX,MAAO,CAAEC,QAAS,SACrB,qBAAGD,MAAO,CAAEY,YAAa,QAAzB,4BAEA,qBAAGC,KAAK,gCACN,uBACEP,IAAKQ,EACLd,MAAO,CACLe,WAAY,QACZC,aAAc,QAEhBT,MAAM,OACNE,IAAI,qB,uHC5DpB,EATY,SAAC,GAAyB,IAAvBQ,EAAsB,EAAtBA,gBACb,OACE,yBACElB,UAAU,eACVmB,wBAAyB,CAAEC,OAAQF,MCIzC,IAoEA,EApEyB,SAAC,GAAwB,IAAD,ECPlBG,EDOH3B,EAAqB,EAArBA,KAAM4B,EAAe,EAAfA,SCPHD,EDQd,WACb,OEZyB,WAC3B,IAAME,EAAWC,SAASC,uBAAuB,gBAEjD,GAAKF,KAAYA,EAASG,QAAU,GAApC,CAOA,IAHA,IAAIC,EAAgB,KACdC,EAAeC,MAAMC,KAAKP,GAEhC,MAAgBK,EAAhB,eAA8B,CAAzB,IAAIG,EAAG,KACV,GAAIA,EAAIC,wBAAwBC,KAAO,GAAI,CACzCN,EAAgBI,EAAIG,aAAa,QACjC,OAYJ,GARKP,IACHA,EAAgBC,EAAaA,EAAaF,OAAS,GAAGQ,aAAa,SAGrEV,SAASW,iBAAiB,oBAAoBC,SAAQ,SAAAC,GACpDA,EAAGC,UAAUC,OAAO,eAGlBZ,EAAe,CACjB,IAAMa,EAAehB,SAASiB,cAAT,iBACFd,EADE,MAGrBa,GAAgBA,EAAaF,UAAUI,IAAI,cFjBpCC,KCRTC,EAAAA,EAAAA,YAAU,WAER,OADAC,OAAOC,iBAAP,SAAkCzB,GAC3B,WACLwB,OAAOE,oBAAP,SAAqC1B,MAEtC,IDMH,IAAM2B,EAAOtD,EAAKuD,eACZC,GAAY,UAAAxD,EAAKG,KAAKC,oBAAV,eAAwBqD,QAAxB,QACVC,EAAmB1D,EAAnB0D,SAAUC,EAAS3D,EAAT2D,KAElB,OACE,gBAAC,IAAD,CAAQ/B,SAAUA,EAAU6B,MAAOD,GACjC,gBAAC,IAAD,CACEC,MAAOH,EAAKM,YAAYH,MACxBI,YAAaP,EAAKM,YAAYC,aAAeP,EAAKQ,UAEpD,2BACExD,UAAU,YACVyD,WAAS,EACTC,SAAS,6BAET,8BACE,sBAAIC,SAAS,YAAYX,EAAKM,YAAYH,OAC1C,yBAAIH,EAAKM,YAAYM,OAGvB,2BACE5D,UAAU,eACVmB,wBAAyB,CAAEC,OAAQ4B,EAAKa,MACxCF,SAAS,gBAEX,gBAAC,EAAD,CAAKzC,gBAAiB8B,EAAK9B,kBAE3B,2BACA,8BACE,gBAAC,IAAD,QAIJ,uBAAKlB,UAAU,iBACb,sBACEC,MAAO,CACLC,QAAQ,OACR4D,SAAS,OACT3D,eAAe,gBACf4D,UAAU,OACVC,QAAS,IAGX,0BACGZ,GACC,gBAAC,EAAAa,KAAD,CAAMC,GAAId,EAASe,OAAOC,KAAMC,IAAI,QAApC,KACKjB,EAASE,YAAYH,QAI9B,0BACGE,GACC,gBAAC,EAAAY,KAAD,CAAMC,GAAIb,EAAKc,OAAOC,KAAMC,IAAI,QAC7BhB,EAAKC,YAAYH,MADpB,Y","sources":["webpack://dongsu-blog/./static/github.png","webpack://dongsu-blog/./src/components/bio.js","webpack://dongsu-blog/./src/components/toc.jsx","webpack://dongsu-blog/./src/templates/blog-post.js","webpack://dongsu-blog/./src/hooks/useScrollEvent.js","webpack://dongsu-blog/./src/js/scroll.js"],"sourcesContent":["export default __webpack_public_path__ + \"static/github-1c95b85d86a7c25b6f3c3aef89f18afa.png\";","/**\n * Bio component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport { StaticImage } from \"gatsby-plugin-image\"\nimport github from \"../../static/github.png\"\n\nconst Bio = () => {\n  const data = useStaticQuery(graphql`\n    query BioQuery {\n      site {\n        siteMetadata {\n          author {\n            name\n            summary\n          }\n          social {\n            github\n          }\n        }\n      }\n    }\n  `)\n\n  // Set these values by editing \"siteMetadata\" in gatsby-config.js\n  const author = data.site.siteMetadata?.author\n  const social = data.site.siteMetadata?.social\n\n  return (\n    <div\n      className=\"bio\"\n      style={{\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n      }}\n    >\n      <StaticImage\n        className=\"bio-avatar\"\n        formats={[\"auto\", \"webp\", \"avif\"]}\n        src=\"../images/profile-pic.png\"\n        width={90}\n        height={90}\n        alt=\"Profile picture\"\n      />\n      {author?.name && (\n        <div>\n          <h3>안녕하세요 🙌🏻 동수입니다.</h3>\n          <p>\n            주어진 상황에서 최고의 퍼포먼스를 내기위해 최선을 다하고 있습니다.\n          </p>\n          <p>기억보단 기록을, 기록보단 공유하는 것을 좋아합니다.</p>\n          <p style={{ marginBottom: \"1vh\" }}>\n            현재는 풀필먼트 서비스 회사에서 웹 프론트 개발을 하고 있습니다. 🎃\n          </p>\n          <div style={{ display: \"flex\" }}>\n            <p style={{ marginRight: \"2vw\" }}>📬 : sonicce99@naver.com</p>\n\n            <a href=\"https://github.com/sonicce99\">\n              <img\n                src={github}\n                style={{\n                  background: \"white\",\n                  borderRadius: \"15px\",\n                }}\n                width=\"25px\"\n                alt=\"github 이미지\"\n              />\n            </a>\n          </div>\n        </div>\n      )}\n    </div>\n  )\n}\n\nexport default Bio\n","import React from \"react\"\n\nconst Toc = ({ tableOfContents }) => {\n  return (\n    <aside\n      className=\"tocContainer\"\n      dangerouslySetInnerHTML={{ __html: tableOfContents }}\n    />\n  )\n}\n\nexport default Toc\n","import * as React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Bio from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\nimport Toc from \"../components/toc\"\nimport { scrollHandler } from \"../js/scroll\"\nimport { useScrollEvent } from \"../hooks/useScrollEvent\"\n\nconst BlogPostTemplate = ({ data, location }) => {\n  useScrollEvent(() => {\n    return scrollHandler()\n  })\n\n  const post = data.markdownRemark\n  const siteTitle = data.site.siteMetadata?.title || `Title`\n  const { previous, next } = data\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <Seo\n        title={post.frontmatter.title}\n        description={post.frontmatter.description || post.excerpt}\n      />\n      <article\n        className=\"blog-post\"\n        itemScope\n        itemType=\"http://schema.org/Article\"\n      >\n        <header>\n          <h1 itemProp=\"headline\">{post.frontmatter.title}</h1>\n          <p>{post.frontmatter.date}</p>\n        </header>\n\n        <section\n          className=\"blog-section\"\n          dangerouslySetInnerHTML={{ __html: post.html }}\n          itemProp=\"articleBody\"\n        />\n        <Toc tableOfContents={post.tableOfContents} />\n\n        <hr />\n        <footer>\n          <Bio />\n        </footer>\n      </article>\n\n      <nav className=\"blog-post-nav\">\n        <ul\n          style={{\n            display: `flex`,\n            flexWrap: `wrap`,\n            justifyContent: `space-between`,\n            listStyle: `none`,\n            padding: 0,\n          }}\n        >\n          <li>\n            {previous && (\n              <Link to={previous.fields.slug} rel=\"prev\">\n                ← {previous.frontmatter.title}\n              </Link>\n            )}\n          </li>\n          <li>\n            {next && (\n              <Link to={next.fields.slug} rel=\"next\">\n                {next.frontmatter.title} →\n              </Link>\n            )}\n          </li>\n        </ul>\n      </nav>\n    </Layout>\n  )\n}\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug(\n    $id: String!\n    $previousPostId: String\n    $nextPostId: String\n  ) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    markdownRemark(id: { eq: $id }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      tableOfContents\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        description\n      }\n    }\n    previous: markdownRemark(id: { eq: $previousPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n    next: markdownRemark(id: { eq: $nextPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n  }\n`\n","// useScrollEvent\nimport { useEffect } from \"react\"\n\nexport function useScrollEvent(onScroll) {\n  useEffect(() => {\n    window.addEventListener(`scroll`, onScroll)\n    return () => {\n      window.removeEventListener(`scroll`, onScroll)\n    }\n  }, [])\n}\n","export const scrollHandler = () => {\n  const titleTag = document.getElementsByClassName(\"custom-class\")\n\n  if (!titleTag || titleTag.length <= 0) {\n    return\n  }\n\n  let selected_aTag = null\n  const titleTag_arr = Array.from(titleTag)\n\n  for (let tag of titleTag_arr) {\n    if (tag.getBoundingClientRect().top > -30) {\n      selected_aTag = tag.getAttribute(\"href\")\n      break\n    }\n  }\n\n  if (!selected_aTag) {\n    selected_aTag = titleTag_arr[titleTag_arr.length - 1].getAttribute(\"href\")\n  }\n\n  document.querySelectorAll(\"aside a.selected\").forEach(el => {\n    el.classList.remove(\"selected\")\n  })\n\n  if (selected_aTag) {\n    const toc_selected = document.querySelector(\n      `aside a[href=\"${selected_aTag}\"]`\n    )\n    toc_selected && toc_selected.classList.add(\"selected\")\n  }\n}\n"],"names":["data","useStaticQuery","author","site","siteMetadata","social","className","style","display","justifyContent","alignItems","S","formats","src","width","height","alt","name","marginBottom","marginRight","href","github","background","borderRadius","tableOfContents","dangerouslySetInnerHTML","__html","onScroll","location","titleTag","document","getElementsByClassName","length","selected_aTag","titleTag_arr","Array","from","tag","getBoundingClientRect","top","getAttribute","querySelectorAll","forEach","el","classList","remove","toc_selected","querySelector","add","scrollHandler","useEffect","window","addEventListener","removeEventListener","post","markdownRemark","siteTitle","title","previous","next","frontmatter","description","excerpt","itemScope","itemType","itemProp","date","html","flexWrap","listStyle","padding","Link","to","fields","slug","rel"],"sourceRoot":""}